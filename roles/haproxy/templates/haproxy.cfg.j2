global
  log 127.0.0.1 local1 notice
  maxconn 4096
  user haproxy
  group haproxy
  daemon
  #ca-base /etc/ssl
  #crt-base /etc/ssl

defaults
  log global
  maxconn 4096
  mode http
  # Add x-forwarded-for header.
  option forwardfor
  option http-server-close
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  # Long timeout for WebSocket connections.
  timeout tunnel 1h

frontend public
  # HTTP
  bind :80
  # Redirect all HTTP traffic to HTTPS
  #redirect scheme https if !{ ssl_fc }

  # HTTPS
  # Example with CA certificate bundle
  # bind :443 ssl crt cert.pem ca-file bundle.crt
  # Example without CA certification bunch
  #bind :443 ssl crt snakeoil.pem

  # The node backends - websockets will be managed automatically, given the
  # right base paths to send them to the right Node.js backend.
  #
  # If you wanted to specifically send websocket traffic somewhere different
  # you'd use an ACL like { hdr(Upgrade) -i WebSocket }. Looking at path works
  # just as well, though - such as { path_beg /socket.io } or similar. Adjust your
  # rules to suite your specific setup.
  acl is_websocket hdr(Upgrade) -i WebSocket
  acl is_ws_url path /socket /connection /connection/websocket
  #use_backend cent if { path_beg /socket }
  #use_backend cent if { path_beg /connection }
  #use_backend cent if { path_beg /connection/websocket }
  # Everything else to Nginx.
  use_backend cent if is_websocket is_ws_url
  default_backend nginx

backend cent
  # Tell the backend that this is a secure connection,
  # even though it's getting plain HTTP.
  #reqadd X-Forwarded-Proto:\ https

  balance roundrobin
  cookie SERVERID insert indirect
  # Check by hitting a page intended for this use.
  #option httpchk GET /served/by/node/isrunning
  #timeout check 500ms
  # Wait 500ms between checks.
  #server node1 127.0.0.1:10080 check inter 500ms
  server cent1 192.168.50.252:80

backend nginx
  # Tell the backend that this is a secure connection,
  # even though it's getting plain HTTP.
  #reqadd X-Forwarded-Proto:\ https

  balance roundrobin
  # Check by hitting a page intended for this use.
  #option httpchk GET /isrunning
  #timeout check 500ms
  # Wait 500ms between checks.
  #server nginx1 127.0.0.1:8080 check inter 500ms
  server nginx1 192.168.50.250:80

# For displaying HAProxy statistics.
#frontend stats
  # HTTPS only.
  # Example with CA certificate bundle
  # bind :1936 ssl crt cert.pem ca-file bundle.crt
  # Example without CA certification bunch
#  bind :1936 ssl crt cert.pem
#  default_backend stats

#backend stats
#  stats enable
#  stats hide-version
#  stats realm Haproxy\ Statistics
#  stats uri /
#  stats auth admin:password
